{"pageProps":{"post":{"id":"tests/2021-12-01-fila-em-c","title":"TESTe Fila em C","date":"2021-12-01","tags":["c"],"excerpt":"Uma informação muito útil","content":"<pre><code class=\"hljs language-c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">ifndef</span> QUEUE_H_INCLUDED</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> QUEUE_H_INCLUDED</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;stdio.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;stdlib.h></span></span>\n\n<span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Node_q</span>\n{</span>\n  <span class=\"hljs-type\">int</span> value;\n  <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Node_q</span> *<span class=\"hljs-title\">next</span>;</span>\n} Node_q;\n\n<span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Queue</span>\n{</span>\n  <span class=\"hljs-type\">int</span> size;\n  Node_q *head, *tail;\n} Queue;\n\nQueue *<span class=\"hljs-title hljs-function\">Queue_create</span><span class=\"hljs-params\">()</span>\n{\n  Queue *q = (Queue *)<span class=\"hljs-built_in\">calloc</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-keyword\">sizeof</span>(Queue));\n  q->head = <span class=\"hljs-literal\">NULL</span>;\n  q->tail = <span class=\"hljs-literal\">NULL</span>;\n  <span class=\"hljs-keyword\">return</span> q;\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title hljs-function\">Queue_destroy</span><span class=\"hljs-params\">(Queue *q)</span>\n{\n  Node_q *aux = q->head, *node = q->head;\n\n  <span class=\"hljs-keyword\">while</span> (node != <span class=\"hljs-literal\">NULL</span>)\n  {\n    node = node->next;\n    <span class=\"hljs-built_in\">free</span>(aux);\n    aux = node;\n  }\n\n  q->head = q->tail = <span class=\"hljs-literal\">NULL</span>;\n  <span class=\"hljs-built_in\">free</span>(q);\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title hljs-function\">Queue_empty</span><span class=\"hljs-params\">(Queue *q)</span>\n{\n  <span class=\"hljs-keyword\">return</span> q->head == <span class=\"hljs-literal\">NULL</span>;\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title hljs-function\">Queue_enq</span><span class=\"hljs-params\">(Queue *q, <span class=\"hljs-type\">int</span> value)</span>\n{\n  Node_q *node = (Node_q *)<span class=\"hljs-built_in\">calloc</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-keyword\">sizeof</span>(Node_q));\n  node->value = value;\n  node->next = <span class=\"hljs-literal\">NULL</span>;\n\n  <span class=\"hljs-keyword\">if</span> (q->head == <span class=\"hljs-literal\">NULL</span>)\n  {\n    q->head = node;\n    q->tail = node;\n  }\n  <span class=\"hljs-keyword\">else</span>\n  {\n    q->tail->next = node;\n    q->tail = node;\n  }\n}\n\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title hljs-function\">Queue_deq</span><span class=\"hljs-params\">(Queue *q)</span>\n{\n  Node_q *to_remove = q->head;\n  <span class=\"hljs-type\">int</span> value = to_remove->value;\n\n  <span class=\"hljs-keyword\">if</span> (to_remove->next == <span class=\"hljs-literal\">NULL</span>)\n  {\n    q->head = <span class=\"hljs-literal\">NULL</span>;\n    q->tail = <span class=\"hljs-literal\">NULL</span>;\n  }\n  <span class=\"hljs-keyword\">else</span>\n  {\n    q->head = to_remove->next;\n  }\n\n  <span class=\"hljs-built_in\">free</span>(to_remove);\n  <span class=\"hljs-keyword\">return</span> value;\n}\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span> <span class=\"hljs-comment\">// QUEUE_H_INCLUDED</span></span>\n</code></pre>"}},"__N_SSG":true}